buildscript {
    ext {
        userHome = System.getProperty("user.home")
        springBootVersion = '2.1.0.M3'
        mainDBUrl = "jdbc:h2:file:${buildDir}/db/footest-dev"
        mainReferenceUrl = 'hibernate:spring:com.etsmtl.codecrusade.entities?dialect=org.hibernate.dialect.H2Dialect'
        runList = ''
    }
    repositories {
        jcenter()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'org.liquibase.gradle' version '2.0.1'
    id 'io.franzbecker.gradle-lombok' version '1.14'
    id 'idea'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'

group = 'com.etsmtl.codecrusade'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 10

repositories {
    jcenter()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local/' }
    flatDir {
        // place manually added jar dependencies in libs
        dirs 'libs'
    }
}

liquibase {
    activities {
        main {
            changeLogFile 'src/main/resources/db/main.xml'
            url project.ext.mainDBUrl
            referenceUrl project.ext.mainReferenceUrl
            username ""
            password ""
        }
        runList = project.ext.runList
    }
}

lombok {
    version = '1.18.2'
    sha256 = ""
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled true
        html.destination file("${buildDir}/jacocoHtml")
    }
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-batch')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-data-rest')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.liquibase:liquibase-core')
    compile('org.yaml:snakeyaml:1.8')
    compile('org.liquibase.ext:liquibase-hibernate5:3.6')
    compile('io.springfox:springfox-swagger2:3.0.0-SNAPSHOT')
    compile('io.springfox:springfox-spring-webmvc:3.0.0-SNAPSHOT')
    compile('io.springfox:springfox-data-rest:3.0.0-SNAPSHOT')
    compile('io.springfox:springfox-swagger-ui:3.0.0-SNAPSHOT')
    compile project(':commons')
    runtime('org.springframework.boot:spring-boot-devtools')
    runtime('com.h2database:h2')
    compileOnly('org.projectlombok:lombok')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.batch:spring-batch-test')
    testCompile('org.springframework.security:spring-security-test')
    liquibaseRuntime('org.liquibase:liquibase-core')
    //liquibaseRuntime('org.liquibase:liquibase-groovy-dsl:2.0.1')
    liquibaseRuntime('com.h2database:h2')
    liquibaseRuntime('org.liquibase.ext:liquibase-hibernate5:3.6')
    liquibaseRuntime('org.springframework.boot:spring-boot')
    liquibaseRuntime('org.springframework:spring-orm')
    liquibaseRuntime('javax.xml.bind:jaxb-api:2.3.0-b170201.1204')
    //liquibaseRuntime(sourceSets.main.compileClasspath)
    liquibaseRuntime(sourceSets.main.output) // https://github.com/liquibase/liquibase-hibernate/issues/170
}


